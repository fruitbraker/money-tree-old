/*
 * This file is generated by jOOQ.
 */
package generated.com.moneytree.persist.db.generated.tables.daos;


import generated.com.moneytree.persist.db.generated.tables.Expense;
import generated.com.moneytree.persist.db.generated.tables.records.ExpenseRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpenseDao extends DAOImpl<ExpenseRecord, generated.com.moneytree.persist.db.generated.tables.pojos.Expense, Long> {

    /**
     * Create a new ExpenseDao without any configuration
     */
    public ExpenseDao() {
        super(Expense.EXPENSE, generated.com.moneytree.persist.db.generated.tables.pojos.Expense.class);
    }

    /**
     * Create a new ExpenseDao with an attached configuration
     */
    public ExpenseDao(Configuration configuration) {
        super(Expense.EXPENSE, generated.com.moneytree.persist.db.generated.tables.pojos.Expense.class, configuration);
    }

    @Override
    public Long getId(generated.com.moneytree.persist.db.generated.tables.pojos.Expense object) {
        return object.getExpenseId();
    }

    /**
     * Fetch records that have <code>expense_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfExpenseId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Expense.EXPENSE.EXPENSE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expense_id IN (values)</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByExpenseId(Long... values) {
        return fetch(Expense.EXPENSE.EXPENSE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>expense_id = value</code>
     */
    public generated.com.moneytree.persist.db.generated.tables.pojos.Expense fetchOneByExpenseId(Long value) {
        return fetchOne(Expense.EXPENSE.EXPENSE_ID, value);
    }

    /**
     * Fetch records that have <code>transaction_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfTransactionDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Expense.EXPENSE.TRANSACTION_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_date IN (values)</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByTransactionDate(Timestamp... values) {
        return fetch(Expense.EXPENSE.TRANSACTION_DATE, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfTransactionAmount(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Expense.EXPENSE.TRANSACTION_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByTransactionAmount(Object... values) {
        return fetch(Expense.EXPENSE.TRANSACTION_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>vendor_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfVendorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Expense.EXPENSE.VENDOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vendor_id IN (values)</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByVendorId(Long... values) {
        return fetch(Expense.EXPENSE.VENDOR_ID, values);
    }

    /**
     * Fetch records that have <code>expense_category BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfExpenseCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Expense.EXPENSE.EXPENSE_CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expense_category IN (values)</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByExpenseCategory(String... values) {
        return fetch(Expense.EXPENSE.EXPENSE_CATEGORY, values);
    }

    /**
     * Fetch records that have <code>metadata BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfMetadata(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Expense.EXPENSE.METADATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>metadata IN (values)</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByMetadata(Long... values) {
        return fetch(Expense.EXPENSE.METADATA, values);
    }

    /**
     * Fetch records that have <code>hide BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchRangeOfHide(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Expense.EXPENSE.HIDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hide IN (values)</code>
     */
    public List<generated.com.moneytree.persist.db.generated.tables.pojos.Expense> fetchByHide(Boolean... values) {
        return fetch(Expense.EXPENSE.HIDE, values);
    }
}
