/*
 * This file is generated by jOOQ.
 */
package generated.com.moneytree.persist.db.generated.tables;


import generated.com.moneytree.persist.db.generated.Keys;
import generated.com.moneytree.persist.db.generated.Mtdev;
import generated.com.moneytree.persist.db.generated.tables.records.BudgetTargetRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BudgetTarget extends TableImpl<BudgetTargetRecord> {

    private static final long serialVersionUID = 256457944;

    /**
     * The reference instance of <code>mtdev.budget_target</code>
     */
    public static final BudgetTarget BUDGET_TARGET = new BudgetTarget();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BudgetTargetRecord> getRecordType() {
        return BudgetTargetRecord.class;
    }

    /**
     * The column <code>mtdev.budget_target.budget_target_id</code>.
     */
    public final TableField<BudgetTargetRecord, Long> BUDGET_TARGET_ID = createField(DSL.name("budget_target_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mtdev.budget_target.expense_category</code>.
     */
    public final TableField<BudgetTargetRecord, String> EXPENSE_CATEGORY = createField(DSL.name("expense_category"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>mtdev.budget_target.amount</code>.
     */
    public final TableField<BudgetTargetRecord, Long> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mtdev.budget_target.metadata</code>.
     */
    public final TableField<BudgetTargetRecord, Long> METADATA = createField(DSL.name("metadata"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>mtdev.budget_target</code> table reference
     */
    public BudgetTarget() {
        this(DSL.name("budget_target"), null);
    }

    /**
     * Create an aliased <code>mtdev.budget_target</code> table reference
     */
    public BudgetTarget(String alias) {
        this(DSL.name(alias), BUDGET_TARGET);
    }

    /**
     * Create an aliased <code>mtdev.budget_target</code> table reference
     */
    public BudgetTarget(Name alias) {
        this(alias, BUDGET_TARGET);
    }

    private BudgetTarget(Name alias, Table<BudgetTargetRecord> aliased) {
        this(alias, aliased, null);
    }

    private BudgetTarget(Name alias, Table<BudgetTargetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> BudgetTarget(Table<O> child, ForeignKey<O, BudgetTargetRecord> key) {
        super(child, key, BUDGET_TARGET);
    }

    @Override
    public Schema getSchema() {
        return Mtdev.MTDEV;
    }

    @Override
    public UniqueKey<BudgetTargetRecord> getPrimaryKey() {
        return Keys.BUDGET_TARGET_PKEY;
    }

    @Override
    public List<UniqueKey<BudgetTargetRecord>> getKeys() {
        return Arrays.<UniqueKey<BudgetTargetRecord>>asList(Keys.BUDGET_TARGET_PKEY);
    }

    @Override
    public List<ForeignKey<BudgetTargetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BudgetTargetRecord, ?>>asList(Keys.BUDGET_TARGET__BUDGET_TARGET_EXPENSE_CATEGORY_FKEY, Keys.BUDGET_TARGET__BUDGET_TARGET_METADATA_FKEY);
    }

    public ExpenseCategory expenseCategory() {
        return new ExpenseCategory(this, Keys.BUDGET_TARGET__BUDGET_TARGET_EXPENSE_CATEGORY_FKEY);
    }

    public Metadata metadata() {
        return new Metadata(this, Keys.BUDGET_TARGET__BUDGET_TARGET_METADATA_FKEY);
    }

    @Override
    public BudgetTarget as(String alias) {
        return new BudgetTarget(DSL.name(alias), this);
    }

    @Override
    public BudgetTarget as(Name alias) {
        return new BudgetTarget(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BudgetTarget rename(String name) {
        return new BudgetTarget(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BudgetTarget rename(Name name) {
        return new BudgetTarget(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
