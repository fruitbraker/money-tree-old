/*
 * This file is generated by jOOQ.
 */
package generated.com.moneytree.persist.db.generated.tables;


import generated.com.moneytree.persist.db.generated.Keys;
import generated.com.moneytree.persist.db.generated.Mtdev;
import generated.com.moneytree.persist.db.generated.tables.records.MetadataRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Metadata extends TableImpl<MetadataRecord> {

    private static final long serialVersionUID = 84615042;

    /**
     * The reference instance of <code>mtdev.metadata</code>
     */
    public static final Metadata METADATA = new Metadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetadataRecord> getRecordType() {
        return MetadataRecord.class;
    }

    /**
     * The column <code>mtdev.metadata.metadata_id</code>.
     */
    public final TableField<MetadataRecord, Long> METADATA_ID = createField(DSL.name("metadata_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mtdev.metadata.date_created</code>.
     */
    public final TableField<MetadataRecord, Timestamp> DATE_CREATED = createField(DSL.name("date_created"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mtdev.metadata.date_modified</code>.
     */
    public final TableField<MetadataRecord, Timestamp> DATE_MODIFIED = createField(DSL.name("date_modified"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mtdev.metadata.notes</code>.
     */
    public final TableField<MetadataRecord, String> NOTES = createField(DSL.name("notes"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>mtdev.metadata</code> table reference
     */
    public Metadata() {
        this(DSL.name("metadata"), null);
    }

    /**
     * Create an aliased <code>mtdev.metadata</code> table reference
     */
    public Metadata(String alias) {
        this(DSL.name(alias), METADATA);
    }

    /**
     * Create an aliased <code>mtdev.metadata</code> table reference
     */
    public Metadata(Name alias) {
        this(alias, METADATA);
    }

    private Metadata(Name alias, Table<MetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private Metadata(Name alias, Table<MetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Metadata(Table<O> child, ForeignKey<O, MetadataRecord> key) {
        super(child, key, METADATA);
    }

    @Override
    public Schema getSchema() {
        return Mtdev.MTDEV;
    }

    @Override
    public UniqueKey<MetadataRecord> getPrimaryKey() {
        return Keys.METADATA_PKEY;
    }

    @Override
    public List<UniqueKey<MetadataRecord>> getKeys() {
        return Arrays.<UniqueKey<MetadataRecord>>asList(Keys.METADATA_PKEY);
    }

    @Override
    public Metadata as(String alias) {
        return new Metadata(DSL.name(alias), this);
    }

    @Override
    public Metadata as(Name alias) {
        return new Metadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Metadata rename(String name) {
        return new Metadata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Metadata rename(Name name) {
        return new Metadata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Timestamp, Timestamp, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
