/*
 * This file is generated by jOOQ.
 */
package generated.com.moneytree.persist.db.generated.tables.records;


import generated.com.moneytree.persist.db.generated.tables.Expense;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpenseRecord extends UpdatableRecordImpl<ExpenseRecord> implements Record7<Long, Timestamp, Object, Long, String, Long, Boolean> {

    private static final long serialVersionUID = -1747622531;

    /**
     * Setter for <code>mtdev.expense.expense_id</code>.
     */
    public ExpenseRecord setExpenseId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.expense_id</code>.
     */
    public Long getExpenseId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mtdev.expense.transaction_date</code>.
     */
    public ExpenseRecord setTransactionDate(Timestamp value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.transaction_date</code>.
     */
    public Timestamp getTransactionDate() {
        return (Timestamp) get(1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public ExpenseRecord setTransactionAmount(Object value) {
        set(2, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getTransactionAmount() {
        return get(2);
    }

    /**
     * Setter for <code>mtdev.expense.vendor_id</code>.
     */
    public ExpenseRecord setVendorId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.vendor_id</code>.
     */
    public Long getVendorId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>mtdev.expense.expense_category</code>.
     */
    public ExpenseRecord setExpenseCategory(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.expense_category</code>.
     */
    public String getExpenseCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mtdev.expense.metadata</code>.
     */
    public ExpenseRecord setMetadata(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.metadata</code>.
     */
    public Long getMetadata() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>mtdev.expense.hide</code>.
     */
    public ExpenseRecord setHide(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.hide</code>.
     */
    public Boolean getHide() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Timestamp, Object, Long, String, Long, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Timestamp, Object, Long, String, Long, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Expense.EXPENSE.EXPENSE_ID;
    }

    @Override
    public Field<Timestamp> field2() {
        return Expense.EXPENSE.TRANSACTION_DATE;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field3() {
        return Expense.EXPENSE.TRANSACTION_AMOUNT;
    }

    @Override
    public Field<Long> field4() {
        return Expense.EXPENSE.VENDOR_ID;
    }

    @Override
    public Field<String> field5() {
        return Expense.EXPENSE.EXPENSE_CATEGORY;
    }

    @Override
    public Field<Long> field6() {
        return Expense.EXPENSE.METADATA;
    }

    @Override
    public Field<Boolean> field7() {
        return Expense.EXPENSE.HIDE;
    }

    @Override
    public Long component1() {
        return getExpenseId();
    }

    @Override
    public Timestamp component2() {
        return getTransactionDate();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component3() {
        return getTransactionAmount();
    }

    @Override
    public Long component4() {
        return getVendorId();
    }

    @Override
    public String component5() {
        return getExpenseCategory();
    }

    @Override
    public Long component6() {
        return getMetadata();
    }

    @Override
    public Boolean component7() {
        return getHide();
    }

    @Override
    public Long value1() {
        return getExpenseId();
    }

    @Override
    public Timestamp value2() {
        return getTransactionDate();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value3() {
        return getTransactionAmount();
    }

    @Override
    public Long value4() {
        return getVendorId();
    }

    @Override
    public String value5() {
        return getExpenseCategory();
    }

    @Override
    public Long value6() {
        return getMetadata();
    }

    @Override
    public Boolean value7() {
        return getHide();
    }

    @Override
    public ExpenseRecord value1(Long value) {
        setExpenseId(value);
        return this;
    }

    @Override
    public ExpenseRecord value2(Timestamp value) {
        setTransactionDate(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public ExpenseRecord value3(Object value) {
        setTransactionAmount(value);
        return this;
    }

    @Override
    public ExpenseRecord value4(Long value) {
        setVendorId(value);
        return this;
    }

    @Override
    public ExpenseRecord value5(String value) {
        setExpenseCategory(value);
        return this;
    }

    @Override
    public ExpenseRecord value6(Long value) {
        setMetadata(value);
        return this;
    }

    @Override
    public ExpenseRecord value7(Boolean value) {
        setHide(value);
        return this;
    }

    @Override
    public ExpenseRecord values(Long value1, Timestamp value2, Object value3, Long value4, String value5, Long value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExpenseRecord
     */
    public ExpenseRecord() {
        super(Expense.EXPENSE);
    }

    /**
     * Create a detached, initialised ExpenseRecord
     */
    public ExpenseRecord(Long expenseId, Timestamp transactionDate, Object transactionAmount, Long vendorId, String expenseCategory, Long metadata, Boolean hide) {
        super(Expense.EXPENSE);

        set(0, expenseId);
        set(1, transactionDate);
        set(2, transactionAmount);
        set(3, vendorId);
        set(4, expenseCategory);
        set(5, metadata);
        set(6, hide);
    }
}
